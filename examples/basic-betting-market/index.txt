Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "non better winner 3"
  at ./index.rsh:146:15:application
  at ./index.rsh:140:11:application call to [unknown function] (defined at: ./index.rsh:140:11:function exp)

  // Violation Witness

  const UInt.max = 12;

  const v1845 = <function return>;
  //    ^ could = false
  //      from: reach standard library:33:49:block app

  // Theorem Formalization

  assert(v1845);

Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance sufficient for transfer"
  at ./index.rsh:156:36:application
  at ./index.rsh:140:11:application call to [unknown function] (defined at: ./index.rsh:140:11:function exp)

  // Violation Witness

  const UInt.max = 100000;

  const falsePool/1532 = <loop variable>;
  //    ^ could = 100000
  //      from: ./index.rsh:67:19:while
  const truePool/1535 = <loop variable>;
  //    ^ could = 0
  //      from: ./index.rsh:67:19:while
  const netBalance/1759 = <loop variable>;
  //    ^ could = 1
  //      from: ./index.rsh:133:19:while
  const bet/1850 = <function return>;
  //    ^ could = 1
  //      from: ./index.rsh:122:23:block app

  // Theorem Formalization

  const v1906 = (bet/1850 + ((((bet/1850 * 100000) / truePool/1535) * falsePool/1532) / 100000)) <= netBalance/1759;
  //    ^ would be false
  assert(v1906);

  Verifying when NO participants are honest
Checked 62 theorems; 4 failures (and 2 omitted repeats) :'(
